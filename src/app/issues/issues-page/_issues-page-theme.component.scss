@use "sass:map";
@use "@angular/material" as mat;
@import "../../scss/event-levels";

@mixin theme($theme) {
  $primary: map.get($theme, primary);
  $is-dark-theme: map.get($theme, is-dark);

  gt-issues-page {
    .bulk-project-select {
      &__inner {
        border-bottom: 1px solid rgba(0, 0, 0, 0.12);
        background-color: if(
          $is-dark-theme,
          mat.m2-get-color-from-palette(mat.$m2-gray-palette, 900),
          mat.m2-get-color-from-palette(mat.$m2-gray-palette, 50)
        );
      }

      &__text {
        color: if(
          $is-dark-theme,
          mat.m2-get-color-from-palette(mat.$m2-gray-palette, 50),
          mat.m2-get-color-from-palette(mat.$m2-gray-palette, 900)
        );
      }
    }

    .resolved {
      background: if(
        $is-dark-theme,
        mat.m2-get-color-from-palette(mat.$m2-gray-palette, 800),
        mat.m2-get-color-from-palette(mat.$m2-gray-palette, 100)
      );
    }

    .ignored {
      background: if(
        $is-dark-theme,
        mat.m2-get-color-from-palette(mat.$m2-gray-palette, 800),
        mat.m2-get-color-from-palette(mat.$m2-gray-palette, 100)
      );
    }

    .level {
      &--sample:after {
        background-color: if(
          $is-dark-theme,
          mat.m2-get-color-from-palette(mat.$m2-gray-palette, 400),
          mat.m2-get-color-from-palette(mat.$m2-gray-palette, 100)
        );
      }

      &--debug:after {
        background-color: if(
          $is-dark-theme,
          mat.m2-get-color-from-palette(mat.$m2-gray-palette, 600),
          mat.m2-get-color-from-palette(mat.$m2-gray-palette, 300)
        );
      }

      &--info:after {
        background-color: $event-level-info-color-light;
      }

      &--warning:after {
        background-color: $event-level-warning-color-light;
      }

      &--error:after {
        background-color: $event-level-error-color-light;
      }

      &--fatal:after {
        background-image: $event-level-fatal-color-light;
      }
    }
  }
}
